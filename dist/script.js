!function(){"use strict";document.addEventListener("alpine:init",(()=>{Alpine.data("observeSections",(()=>({view:window.location.hash||"#bio",init(){setTimeout((()=>{this.observeSections()}),100),window.addEventListener("hashchange",this.handleHashChange.bind(this)),window.location.hash||(window.location.hash="#bio",this.view="#bio"),setTimeout((()=>{document.querySelectorAll(".type-it").forEach(((e,t)=>{const n=e.textContent;e.textContent="";const o=new IntersectionObserver((i=>{i.forEach((i=>{i.isIntersecting&&(function(e,t,n){setTimeout((()=>{let n=0;function o(){n<t.length&&(e.textContent+=t.charAt(n),n++,setTimeout(o,30))}e.textContent="",o()}),n)}(e,n,1e3*t),o.unobserve(i.target))}))}),{threshold:.5});o.observe(e)}))}),100)},handleHashChange(){this.view=window.location.hash,setTimeout((()=>{this.observeSections()}),100)},observeSections(){const e=document.querySelectorAll("h1"),t=document.querySelectorAll("[data-view]");if("#view"===this.view)return;e.forEach((e=>{e.innerHTML=[...e.textContent.trim()].map((e=>`<div class="inline-block">${" "===e?"&nbsp;":e}</div>`)).join("")}));const n=new IntersectionObserver((e=>{e.forEach((e=>{var t,n,o,i,s;e.isIntersecting&&"H1"===e.target.tagName&&(t=e.target.querySelectorAll("div"),n=90,o=2,i="elastic.out(1.2, 0.5)",s=.03,gsap.fromTo(t,{opacity:0,scale:0,y:n},{opacity:1,scale:1,y:0,duration:o,ease:i,stagger:s}))}))}),{threshold:.5});[...e,...t].forEach((e=>n.observe(e)))}})))}))}();
