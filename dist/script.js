!function(){"use strict";document.addEventListener("alpine:init",()=>{Alpine.data("observeSections",()=>({view:window.location.hash||"#bio",init(){setTimeout(()=>{this.observeSections()},100),window.addEventListener("hashchange",this.handleHashChange.bind(this)),window.location.hash||(window.location.hash="#bio",this.view="#bio"),setTimeout(()=>{document.querySelectorAll(".type-it").forEach((e,t)=>{const o=e.textContent;e.textContent="";const n=new IntersectionObserver(i=>{i.forEach(i=>{i.isIntersecting&&(function(e,t,o){setTimeout(()=>{let o=0;function n(){o<t.length&&(e.textContent+=t.charAt(o),o++,setTimeout(n,30))}e.textContent="",n()},o)}(e,o,1e3*t),n.unobserve(i.target))})},{threshold:.5});n.observe(e)})},100)},handleHashChange(){this.view=window.location.hash,this.$nextTick(()=>{document.getElementById("appScroll").scrollTo({top:0,left:0,behavior:"smooth"})}),setTimeout(()=>{this.observeSections()},100)},observeSections(){const e=document.querySelectorAll("h1"),t=document.querySelectorAll("[data-view]");if("#view"===this.view)return;e.forEach(e=>{e.innerHTML=[...e.textContent.trim()].map(e=>`<div class="inline-block">${" "===e?"&nbsp;":e}</div>`).join("")});const o=new IntersectionObserver(e=>{e.forEach(e=>{var t,o,n,i,s;e.isIntersecting&&"H1"===e.target.tagName&&(t=e.target.querySelectorAll("div"),o=90,n=2,i="elastic.out(1.2, 0.5)",s=.03,gsap.fromTo(t,{opacity:0,scale:0,y:o},{opacity:1,scale:1,y:0,duration:n,ease:i,stagger:s}))})},{threshold:.5});[...e,...t].forEach(e=>o.observe(e))}}))})}();
